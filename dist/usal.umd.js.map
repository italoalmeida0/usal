{
  "version": 3,
  "sources": ["../src/usal.js"],
  "sourcesContent": ["const USAL = (() => {\r\n  // Handle server-side rendering - return dummy methods if no window object\r\n  if (typeof window === 'undefined') {\r\n    const noop = () => ({});\r\n    return {\r\n      config: noop,\r\n      destroy: noop,\r\n      createInstance: () => ({ config: noop, destroy: noop}),\r\n    };\r\n  }\r\n\r\n  // Config array indices - using numbers instead of object keys for performance\r\n  const ANIMATION = 0;\r\n  const DIRECTION = 1;\r\n  const DURATION = 2;\r\n  const DELAY = 3;\r\n  const THRESHOLD = 4;\r\n  const SPLIT_DELAY = 5;\r\n  const EASING = 6;\r\n  const BLUR = 7;\r\n  const ONCE = 8;\r\n  const SPLIT = 9;\r\n  const SPLIT_ANIMATION = 10;\r\n  const COUNT = 11;\r\n  const TEXT = 12;\r\n\r\n  const ANIMATION_FADE = 0;\r\n  const ANIMATION_ZOOMIN = 1;\r\n  const ANIMATION_ZOOMOUT = 2;\r\n  const ANIMATION_FLIP = 3;\r\n\r\n  const animationMap = { fade: 0, zoomin: 1, zoomout: 2, flip: 3 };\r\n\r\n  // Bitwise flags for directions - allows combining multiple directions\r\n  const DIRECTION_UP = 1;     // 0001\r\n  const DIRECTION_DOWN = 2;   // 0010\r\n  const DIRECTION_LEFT = 4;   // 0100\r\n  const DIRECTION_RIGHT = 8;  // 1000\r\n\r\n  const EASING_EASE_OUT = 0;\r\n  const EASING_LINEAR = 1;\r\n  const EASING_EASE = 2;\r\n  const EASING_EASE_IN = 3;\r\n\r\n  const defaults = {\r\n    maxConcurrent: 100,\r\n    duration: 1000,\r\n    delay: 0,\r\n    threshold: 30,\r\n    splitDelay: 30,\r\n    once: false,\r\n  };\r\n\r\n  // Utility to apply styles\r\n  const $ = (element, styles) => Object.assign(element.style, styles);\r\n\r\n  const parseClasses = (str) => {\r\n    const tokens = str.trim().split(/\\s+/);\r\n    // Initialize config array with default values\r\n    const parsedConfig = [\r\n      ANIMATION_FADE,\r\n      0,\r\n      defaults.duration,\r\n      defaults.delay,\r\n      defaults.threshold,\r\n      defaults.splitDelay,\r\n      EASING_EASE_OUT,\r\n      0,\r\n      0,\r\n      null,\r\n      null,\r\n      null,\r\n      null,\r\n    ];\r\n\r\n    tokens.forEach((token) => {\r\n      const parts = token.split('-');\r\n      const first = parts[0];\r\n\r\n      if (animationMap[first] !== undefined) {\r\n        parsedConfig[ANIMATION] = animationMap[first];\r\n        if (parts[1]) {\r\n          // Parse direction chars and combine using bitwise OR\r\n          let direction = 0;\r\n          for (const char of parts[1]) {\r\n            direction |=\r\n              char === 'u'\r\n                ? DIRECTION_UP\r\n                : char === 'd'\r\n                ? DIRECTION_DOWN\r\n                : char === 'l'\r\n                ? DIRECTION_LEFT\r\n                : char === 'r'\r\n                ? DIRECTION_RIGHT\r\n                : 0;\r\n          }\r\n          parsedConfig[DIRECTION] = direction;\r\n        }\r\n      } else if (first === 'split') {\r\n        const second = parts[1];\r\n        if (['word', 'letter', 'item'].includes(second)) {\r\n          parsedConfig[SPLIT] = second;\r\n        } else if (second === 'delay' && parts[2]) {\r\n          parsedConfig[SPLIT_DELAY] = +parts[2];\r\n        } else {\r\n          // Store animation config for split elements\r\n          parsedConfig[SPLIT_ANIMATION] = token.substring(6);\r\n        }\r\n      } else if (first === 'text' && ['shimmer', 'fluid'].includes(parts[1])) {\r\n        parsedConfig[TEXT] = parts[1];\r\n      } else if (token.startsWith('count-[') && token.endsWith(']')) {\r\n        // Extract counter pattern from count-[pattern]\r\n        parsedConfig[COUNT] = token.slice(7, -1);\r\n      } else if (parts[1] && !isNaN(+parts[1])) {\r\n        const value = +parts[1];\r\n        if (first === 'duration') parsedConfig[DURATION] = value;\r\n        else if (first === 'delay') parsedConfig[DELAY] = value;\r\n        else if (first === 'threshold') parsedConfig[THRESHOLD] = value;\r\n      } else if (token === 'blur') {\r\n        parsedConfig[BLUR] = 1;\r\n      } else if (token === 'once') {\r\n        parsedConfig[ONCE] = 1;\r\n      } else if (token === 'linear') {\r\n        parsedConfig[EASING] = EASING_LINEAR;\r\n      } else if (token === 'ease') {\r\n        parsedConfig[EASING] = EASING_EASE;\r\n      } else if (token === 'ease-in') {\r\n        parsedConfig[EASING] = EASING_EASE_IN;\r\n      }\r\n    });\r\n\r\n    return parsedConfig;\r\n  };\r\n\r\n  // Easing functions - mathematical curves for smooth animation\r\n  const easings = [\r\n    (t) => 1 - Math.pow(1 - t, 3),  // ease-out\r\n    (t) => t,  // linear\r\n    (t) => (t < 0.5 ? 4 * t * t * t : 1 - Math.pow(-2 * t + 2, 3) / 2),  // ease\r\n    (t) => t * t * t,  // ease-in\r\n  ];\r\n\r\n  const getTransform = (animation, direction, progress) => {\r\n    const inverse = 1 - progress;\r\n    const isFlip = animation === ANIMATION_FLIP;\r\n\r\n    let transform = '';\r\n\r\n    if (animation === ANIMATION_ZOOMIN) {\r\n      transform = `scale(${0.6 + progress * 0.4})`;\r\n    } else if (animation === ANIMATION_ZOOMOUT) {\r\n      transform = `scale(${1.2 - progress * 0.2})`;\r\n    } else if (isFlip) {\r\n      // Calculate rotation angle based on direction flags\r\n      const value =\r\n        inverse *\r\n        (direction &&\r\n        direction !== DIRECTION_UP &&\r\n        direction !== DIRECTION_DOWN &&\r\n        direction !== DIRECTION_LEFT &&\r\n        direction !== DIRECTION_RIGHT\r\n          ? 45  // Diagonal flip\r\n          : 90); // Single axis flip\r\n      const parts = [];\r\n      // Check vertical flip using bitwise AND\r\n      if (direction & (DIRECTION_UP | DIRECTION_DOWN)) {\r\n        parts.push(`rotateX(${direction & DIRECTION_UP ? value : -value}deg)`);\r\n      }\r\n      // Check horizontal flip\r\n      if (direction & (DIRECTION_LEFT | DIRECTION_RIGHT)) {\r\n        parts.push(\r\n          `rotateY(${direction & DIRECTION_LEFT ? -value : value}deg)`\r\n        );\r\n      }\r\n      if (!parts.length && isFlip) {\r\n        parts.push(`rotateY(${inverse * 90}deg)`);\r\n      }\r\n      transform = parts.length ? `perspective(400px) ${parts.join(' ')}` : '';\r\n    }\r\n\r\n    // Add translation for non-flip animations with direction\r\n    if (!isFlip && direction) {\r\n      const value = inverse * 30;\r\n      const x =\r\n        direction & DIRECTION_RIGHT\r\n          ? -value\r\n          : direction & DIRECTION_LEFT\r\n          ? value\r\n          : 0;\r\n      const y =\r\n        direction & DIRECTION_DOWN\r\n          ? -value\r\n          : direction & DIRECTION_UP\r\n          ? value\r\n          : 0;\r\n      if (x || y) {\r\n        transform += ` translate(${x}px, ${y}px)`;\r\n      }\r\n    }\r\n\r\n    return [progress, transform || 'none'];\r\n  };\r\n\r\n  const setupCount = (element, config, data) => {\r\n    const text = element.textContent || '';\r\n    const parts = text.split(config[COUNT]);\r\n    if (parts.length !== 2) return false;\r\n\r\n    // Parse number format (handle decimals and thousand separators)\r\n    const clean = config[COUNT].replace(/[^\\d\\s,.]/g, '');\r\n    let decimals = 0,\r\n      value = 0;\r\n\r\n    const nums = clean.replace(/[^\\d.]/g, '.');\r\n    const lastDot = nums.lastIndexOf('.');\r\n    if (lastDot > -1) {\r\n      const after = nums.substring(lastDot + 1);\r\n      if (after.length <= 2) {\r\n        decimals = after.length;\r\n        value = parseFloat(nums);\r\n      } else {\r\n        value = parseFloat(nums.replace(/\\./g, ''));\r\n      }\r\n    } else {\r\n      value = parseFloat(clean.replace(/\\D/g, ''));\r\n    }\r\n\r\n    const span = document.createElement('span');\r\n    span.textContent = '0';\r\n    span.style.cssText = 'display:inline;visibility:visible';\r\n\r\n    element.innerHTML = '';\r\n    element.appendChild(document.createTextNode(parts[0]));\r\n    element.appendChild(span);\r\n    element.appendChild(document.createTextNode(parts[1]));\r\n\r\n    data.countData = [value, decimals, config[COUNT]];\r\n    data.countSpan = span;\r\n    return true;\r\n  };\r\n\r\n  const formatNumber = (value, original, decimals) => {\r\n    let formatted =\r\n      decimals > 0 ? value.toFixed(decimals) : Math.floor(value).toString();\r\n\r\n    // Add thousand separators if original had them\r\n    if (original.includes(' ') || original.includes(',')) {\r\n      const parts = formatted.split('.');\r\n      parts[0] = parts[0].replace(\r\n        /\\B(?=(\\d{3})+(?!\\d))/g,  // Regex for thousand grouping\r\n        original.includes(' ') ? ' ' : ','\r\n      );\r\n      formatted = parts.join(decimals > 0 ? '.' : '');\r\n    }\r\n\r\n    return formatted;\r\n  };\r\n\r\n  const processElement = (element, instance) => {\r\n    // Generate unique ID for tracking\r\n    let id = element.getAttribute('data-usal-id');\r\n    if (!id) {\r\n      id = `u${Date.now()}${Math.random().toString(36).substr(2, 5)}`;\r\n      element.setAttribute('data-usal-id', id);\r\n    }\r\n\r\n    // Cancel any existing animation\r\n    const existing = instance.elements.get(id);\r\n    if (existing?.rafId) {\r\n      cancelAnimationFrame(existing.rafId);\r\n      instance.animating.delete(element);\r\n    }\r\n\r\n    const classes = element.getAttribute('data-usal') || '';\r\n    const config = parseClasses(classes);\r\n\r\n    const data = {\r\n      element,\r\n      config,\r\n      configString: classes,\r\n      original: {\r\n        opacity: element.style.opacity || '',\r\n        transform: element.style.transform || '',\r\n        filter: element.style.filter || '',\r\n      },\r\n      targets: null,  // For split animations\r\n      animated: 0,\r\n      rafId: null,\r\n    };\r\n\r\n    if (config[COUNT]) setupCount(element, config, data);\r\n\r\n    if (config[SPLIT]) {\r\n      const targets = [];\r\n\r\n      if (config[SPLIT] === 'item') {\r\n        // Split by child elements\r\n        Array.from(element.children).forEach((child) => {\r\n          child.style.opacity = config[TEXT] ? '1' : '0';\r\n          targets.push(child);\r\n        });\r\n      } else {\r\n        // Split text into words or letters\r\n        const isWord = config[SPLIT] === 'word';\r\n        const text = element.textContent || '';\r\n        element.innerHTML = '';\r\n\r\n        const parts = isWord ? text.split(/(\\s+)/) : text.split('');\r\n        parts.forEach((part) => {\r\n          if (!part) return;\r\n          if (/\\s/.test(part)) {\r\n            // Preserve whitespace as text nodes\r\n            element.appendChild(document.createTextNode(part));\r\n          } else {\r\n            const span = document.createElement('span');\r\n            span.textContent = part;\r\n            span.style.cssText = `display:inline-block;opacity:${\r\n              config[TEXT] ? '1' : '0'\r\n            }`;\r\n            element.appendChild(span);\r\n            targets.push(span);\r\n          }\r\n        });\r\n      }\r\n\r\n      data.targets = targets;\r\n      if (config[SPLIT_ANIMATION])\r\n        data.splitConfig = parseClasses(config[SPLIT_ANIMATION]);\r\n    }\r\n\r\n    if (!config[TEXT] && !data.countSpan && !data.targets) {\r\n      $(element, { opacity: '0' });\r\n    }\r\n\r\n    instance.elements.set(id, data);\r\n    return data;\r\n  };\r\n\r\n  const animate = (ratio, data, instance) => {\r\n    if (\r\n          data.animated ||\r\n          ratio < getThreshold(data) ||\r\n          instance.animating.has(data.element) ||\r\n          instance.animating.size >= instance.config.maxConcurrent  // Limit concurrent animations for performance\r\n    ) return;\r\n    \r\n    instance.animating.add(data.element);\r\n\r\n    const { config, element, targets, countSpan, countData } = data;\r\n\r\n    // Set initial state\r\n    if (!config[TEXT] && !countSpan && !targets) {\r\n      const [, transform] = getTransform(\r\n        config[ANIMATION],\r\n        config[DIRECTION],\r\n        0\r\n      );\r\n      $(element, {\r\n        opacity: '0',\r\n        transform: transform !== 'none' ? transform : 'translateZ(0)',\r\n        filter: config[BLUR] ? 'blur(10px)' : '',\r\n        willChange: 'transform,opacity',\r\n      });\r\n    }\r\n\r\n    const start = performance.now() + config[DELAY];\r\n    const easing = easings[config[EASING]];\r\n    const splitConfig =\r\n      targets && config[SPLIT_ANIMATION]\r\n        ? parseClasses(config[SPLIT_ANIMATION])\r\n        : config;\r\n\r\n    // Text animation effects (shimmer/fluid)\r\n    if (config[TEXT]) {\r\n      const textTargets = targets || [element];\r\n      const startTime = performance.now();\r\n\r\n      const tick = () => {\r\n        const elapsed = performance.now() - startTime;\r\n        const cycle = (elapsed % config[DURATION]) / config[DURATION];\r\n\r\n        textTargets.forEach((target, index) => {\r\n          if (config[TEXT] === 'shimmer') {\r\n            // Wave-like brightness effect\r\n            const phase = cycle * Math.PI * 2 + index * 0.5;\r\n            const intensity = Math.sin(phase) * 0.5 + 0.5;\r\n            $(target, {\r\n              opacity: 0.5 + intensity * 0.5,\r\n              filter: `brightness(${1 + intensity * 0.3})`,\r\n            });\r\n          } else {\r\n            // Fluid weight animation\r\n            const wave = cycle * 1.6 - 0.3;\r\n            const position = index / textTargets.length;\r\n            const distance = Math.abs(wave - position);\r\n            const intensity = distance < 0.3 ? 1 - distance / 0.3 : 0;\r\n            $(target, {\r\n              fontWeight: Math.round(100 + intensity * 800).toString(),\r\n              opacity: '1',\r\n            });\r\n          }\r\n        });\r\n        data.rafId = requestAnimationFrame(tick);\r\n      };\r\n\r\n      tick();\r\n      data.animated = 1;\r\n      return;\r\n    }\r\n\r\n    // Main animation loop\r\n    const tick = () => {\r\n      const elapsed = Math.max(0, performance.now() - start);\r\n      const progress = Math.min(elapsed / config[DURATION], 1);\r\n      const eased = easing(progress);\r\n\r\n      // Counter animation\r\n      if (countSpan && countData) {\r\n        countSpan.textContent =\r\n          progress >= 1\r\n            ? countData[2]\r\n            : formatNumber(countData[0] * eased, countData[2], countData[1]);\r\n      }\r\n\r\n      const applyAnimation = (el, animProgress, animConfig) => {\r\n        const [, transform] = getTransform(\r\n          animConfig[ANIMATION],\r\n          animConfig[DIRECTION],\r\n          animProgress\r\n        );\r\n        \r\n        $(el, {\r\n          opacity: animProgress.toString(),\r\n          transform: transform !== 'none' ? transform : 'translateZ(0)',\r\n          filter: config[BLUR] && animProgress < 1 \r\n            ? `blur(${(1 - animProgress) * 10}px)` \r\n            : '',\r\n          willChange: animProgress < 1 ? 'transform,opacity' : 'auto', // AQUI - usar animProgress!\r\n        });\r\n      };\r\n\r\n      if (targets) {\r\n        let done = true;\r\n        targets.forEach((target, index) => {\r\n          const targetDelay = index * config[SPLIT_DELAY];\r\n          const targetElapsed = elapsed - targetDelay;\r\n\r\n          if (targetElapsed < 0) {\r\n            done = false;\r\n            return;\r\n          }\r\n\r\n          const targetProgress = Math.min(targetElapsed / config[DURATION], 1);\r\n          const targetEased = easing(targetProgress);\r\n          \r\n          applyAnimation(target, targetEased, splitConfig);\r\n          \r\n          if (targetProgress < 1) done = false;\r\n        });\r\n\r\n        if (!done) {\r\n          data.rafId = requestAnimationFrame(tick);\r\n        } else {\r\n          instance.animating.delete(element);\r\n          data.animated = 1;\r\n        }\r\n      } else {\r\n        applyAnimation(element, eased, config);\r\n        \r\n        if (progress < 1) {\r\n          data.rafId = requestAnimationFrame(tick);\r\n        } else {\r\n          instance.animating.delete(element);\r\n          data.animated = 1;\r\n        }\r\n      }\r\n    };\r\n    data.rafId = requestAnimationFrame(tick);\r\n  };\r\n\r\n  const reset = (data, instance) => {\r\n    if (data.rafId) {\r\n      cancelAnimationFrame(data.rafId);\r\n      data.rafId = null;\r\n    }\r\n\r\n    const { element, targets, countSpan, original } = data;\r\n\r\n    if (!data.config[TEXT] && !countSpan && !targets) {\r\n      $(element, { opacity: '0', transform: '', filter: '' });\r\n    } else {\r\n      $(element, {\r\n        opacity: original.opacity,\r\n        transform: original.transform,\r\n        filter: original.filter,\r\n      });\r\n    }\r\n\r\n    if (countSpan) countSpan.textContent = '0';\r\n    if (targets) {\r\n      targets.forEach((target) =>\r\n        $(target, { opacity: '0', transform: '', filter: '' })\r\n      );\r\n    }\r\n\r\n    if (!data.config[ONCE] && !instance.config.once) data.animated = 0; \r\n    instance.animating.delete(element);\r\n  };\r\n\r\nconst getThreshold = (data) => {\r\n    return Math.max(0, Math.min(1, \r\n        (data.config[THRESHOLD] || defaults.threshold) / 100\r\n    ));\r\n}\r\n\r\nconst newElement = (element, instance) => {\r\n  const data = processElement(element, instance);\r\n  if (instance.observer) {\r\n    instance.observer.observe(element);\r\n    const rect = element.getBoundingClientRect();\r\n    \r\n    const visible = \r\n      rect.top < window.innerHeight && \r\n      rect.bottom > 0 && \r\n      rect.left < window.innerWidth && \r\n      rect.right > 0;\r\n    \r\n    if (visible) {\r\n      const visibleHeight = Math.min(rect.bottom, window.innerHeight) - Math.max(rect.top, 0);\r\n      const visibleWidth = Math.min(rect.right, window.innerWidth) - Math.max(rect.left, 0);\r\n      \r\n      const visibleArea = visibleHeight * visibleWidth;\r\n      const totalArea = rect.height * rect.width;\r\n      const ratio = visibleArea / totalArea;\r\n    \r\n      animate(ratio, data, instance);\r\n    }\r\n  }\r\n};\r\n\r\n  const handleElement = (element, instance, action = 'add') => {\r\n    const id = element.getAttribute('data-usal-id');\r\n\r\n    if (action === 'remove') {\r\n      if (!id) return;\r\n      const data = instance.elements.get(id);\r\n      if (!data) return;\r\n      if (data.rafId) cancelAnimationFrame(data.rafId);\r\n      if (instance.observer) instance.observer.unobserve(element);\r\n      instance.elements.delete(id);\r\n      instance.animating.delete(element);\r\n      return;\r\n    }\r\n\r\n    if (action === 'update') {\r\n      const newClasses = element.getAttribute('data-usal');\r\n      \r\n      if (!newClasses) {\r\n        handleElement(element, instance, 'remove');\r\n        return;\r\n      }\r\n      if (id && instance.elements.has(id)) {\r\n        const data = instance.elements.get(id);\r\n        if (newClasses !== data.configString) {\r\n          // Config changed - reset and reprocess\r\n          reset(data, instance);\r\n          instance.elements.delete(id);\r\n          element.removeAttribute('data-usal-id');\r\n\r\n          newElement(element, instance);\r\n        }\r\n      } else {\r\n        handleElement(element, instance, 'add');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (id && instance.elements.has(id)) return;\r\n\r\n    newElement(element, instance);\r\n  };\r\n\r\n  const setupObservers = (instance) => {\r\n    if (instance.observer) instance.observer.disconnect();\r\n    if (instance.mutationObserver) instance.mutationObserver.disconnect();\r\n\r\n    // IntersectionObserver for viewport visibility\r\n    instance.observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          const data = instance.elements.get(\r\n            entry.target.getAttribute('data-usal-id')\r\n          );\r\n          if (!data) return;\r\n\r\n          if (entry.intersectionRatio === 0 && \r\n               data.animated &&\r\n              !data.config[ONCE] && \r\n              !instance.animating.has(data.element)\r\n          ) reset(data, instance);\r\n          else animate(entry.intersectionRatio, data, instance);\r\n          \r\n        });\r\n      },\r\n      // Multiple thresholds for smooth detection\r\n      { threshold: [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0] }\r\n    );\r\n\r\n    instance.elements.forEach((data) =>\r\n      instance.observer.observe(data.element)\r\n    );\r\n\r\n    // MutationObserver for DOM changes\r\n    instance.mutationObserver = new MutationObserver((mutations) => {\r\n      mutations.forEach((mutation) => {\r\n        if (mutation.type === 'childList') {\r\n          // Handle added nodes\r\n          mutation.addedNodes.forEach((node) => {\r\n            if (node.nodeType === 1) {  // Element node\r\n              if (node.hasAttribute('data-usal')) handleElement(node, instance);\r\n              node\r\n                .querySelectorAll?.('[data-usal]')\r\n                ?.forEach((element) => handleElement(element, instance));\r\n            }\r\n          });\r\n          // Handle removed nodes\r\n          mutation.removedNodes.forEach((node) => {\r\n            if (node.nodeType === 1) {\r\n              if (node.hasAttribute('data-usal'))\r\n                handleElement(node, instance, 'remove');\r\n              node\r\n                .querySelectorAll?.('[data-usal]')\r\n                ?.forEach((element) =>\r\n                  handleElement(element, instance, 'remove')\r\n                );\r\n            }\r\n          });\r\n        } else if (\r\n          mutation.type === 'attributes' &&\r\n          mutation.attributeName === 'data-usal'\r\n        ) {\r\n          // Handle attribute changes\r\n          handleElement(mutation.target, instance, 'update');\r\n        }\r\n      });\r\n    });\r\n\r\n    instance.mutationObserver.observe(document.body, {\r\n      childList: true,\r\n      subtree: true,\r\n      attributes: true,\r\n      attributeFilter: ['data-usal'],\r\n    });\r\n  };\r\n\r\n  const createInstance = (config = {}) => {\r\n    let destroyTimeout;\r\n    const instance = {\r\n      initialized: false,\r\n      observer: null,\r\n      mutationObserver: null,\r\n      elements: new Map(),  // Track all animated elements\r\n      animating: new Set(),  // Currently animating elements\r\n      config: { ...defaults, ...config },\r\n    };\r\n\r\n    return {\r\n      init(newConfig = {}) {\r\n        if (instance.initialized) return;\r\n\r\n        instance.initialized = true;\r\n        Object.assign(instance.config, newConfig);\r\n        instance.observer = new IntersectionObserver(() => {});\r\n        document\r\n          .querySelectorAll('[data-usal]')\r\n          .forEach((element) => handleElement(element, instance));\r\n        setupObservers(instance);\r\n      },\r\n\r\n      destroy() {\r\n        clearTimeout(destroyTimeout);\r\n        destroyTimeout = setTimeout(() => {\r\n          // Clean up all observers and animations\r\n          [instance.observer, instance.mutationObserver].forEach((observer) =>\r\n            observer?.disconnect()\r\n          );\r\n          \r\n          instance.elements.forEach((data) => {\r\n            if (data.rafId) cancelAnimationFrame(data.rafId);\r\n            if (data.element?.parentNode) {\r\n              $(data.element, data.original);\r\n              data.element.removeAttribute('data-usal-id'); // AQUI DENTRO!\r\n            }\r\n          });\r\n          \r\n          instance.elements.clear();\r\n          instance.animating.clear();\r\n          instance.initialized = false;\r\n          instance.observer = null;\r\n          instance.mutationObserver = null;\r\n        }, 0);\r\n      },\r\n\r\n      createInstance: () => createInstance(config),\r\n    };\r\n  };\r\n\r\n  const globalInstance = createInstance();\r\n  return { ...globalInstance, createInstance };\r\n})();\r\n\r\n// Auto-initialize on page load\r\nif (typeof window !== 'undefined' && !window.USAL) {\r\n  window.USAL = USAL;\r\n  const init = () => USAL.init();\r\n  if (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', init);\r\n  } else {\r\n    requestAnimationFrame(init);\r\n  }\r\n}\r\n\r\nexport default (typeof window !== 'undefined' && window.USAL) || USAL;"],
  "mappings": "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",
  "names": ["tick"]
}
