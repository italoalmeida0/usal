{
  "version": 3,
  "sources": ["../src/usal.js"],
  "sourcesContent": ["const USAL = (() => {\r\n  const state = {\r\n    observer: null,\r\n    mutationObserver: null,\r\n    elements: new Map(),\r\n    animating: new Set(),\r\n    config: {\r\n      maxConcurrent: 100,\r\n      defaultDuration: 1000,\r\n      defaultDelay: 0,\r\n      defaultThreshold: 30,\r\n      defaultSplitDelay: 30,\r\n    },\r\n  }\r\n\r\n  const parseClasses = (str, instance) => {\r\n    const tokens = str.trim().split(/\\s+/)\r\n    const parsed = {\r\n      animation: \"fade\",\r\n      direction: \"\",\r\n      duration: instance.config.defaultDuration,\r\n      delay: instance.config.defaultDelay,\r\n      threshold: instance.config.defaultThreshold,\r\n      splitDelay: instance.config.defaultSplitDelay,\r\n      easing: \"ease-out\",\r\n      blur: false,\r\n      once: false,\r\n      split: null,\r\n      splitAnimation: null,\r\n      count: null,\r\n      text: null,\r\n    }\r\n\r\n    tokens.forEach((token) => {\r\n      const parts = token.split(\"-\")\r\n      const first = parts[0]\r\n      const second = parts[1]\r\n\r\n      if ([\"fade\", \"zoomin\", \"zoomout\", \"flip\"].includes(first)) {\r\n        parsed.animation = first\r\n        if (second) {\r\n          const map = { u: \"up\", d: \"down\", l: \"left\", r: \"right\" }\r\n          parsed.direction = second\r\n            .split(\"\")\r\n            .map((d) => map[d])\r\n            .join(\"-\")\r\n        }\r\n      } else if (first === \"split\") {\r\n        if ([\"word\", \"letter\", \"item\"].includes(second)) {\r\n          parsed.split = second\r\n        } else if (second === \"delay\" && parts[2]) {\r\n          parsed.splitDelay = parseInt(parts[2])\r\n        } else {\r\n          parsed.splitAnimation = parts.slice(1).join(\"-\")\r\n        }\r\n      } else if (first === \"text\" && [\"shimmer\", \"fluid\"].includes(second)) {\r\n        parsed.text = second\r\n      } else if (token.startsWith(\"count-[\") && token.endsWith(\"]\")) {\r\n        parsed.count = token.slice(7, -1)\r\n      } else if (second && !isNaN(parseInt(second))) {\r\n        if (first === \"duration\") parsed.duration = parseInt(second)\r\n        else if (first === \"delay\") parsed.delay = parseInt(second)\r\n        else if (first === \"threshold\") parsed.threshold = parseInt(second)\r\n      } else if (token === \"blur\") parsed.blur = true\r\n      else if (token === \"once\") parsed.once = true\r\n      else if ([\"linear\", \"ease\", \"ease-in\", \"ease-out\"].includes(token)) {\r\n        parsed.easing = token\r\n      }\r\n    })\r\n\r\n    return parsed\r\n  }\r\n\r\n  const easings = {\r\n    linear: (t) => t,\r\n    ease: (t) => (t < 0.5 ? 4 * t * t * t : 1 - Math.pow(-2 * t + 2, 3) / 2),\r\n    \"ease-in\": (t) => t * t * t,\r\n    \"ease-out\": (t) => 1 - Math.pow(1 - t, 3),\r\n  }\r\n\r\n  const getTransform = (animation, direction, progress) => {\r\n    const t = progress\r\n    const i = 1 - t\r\n\r\n    const calc = (type) => {\r\n      if (!direction) return type === \"flip\" ? `rotateY(${i * 90}deg)` : \"\"\r\n\r\n      const v =\r\n        i *\r\n        (type === \"flip\" && direction.length > 1\r\n          ? 45\r\n          : type === \"flip\"\r\n            ? 90\r\n            : 30)\r\n\r\n      if (type === \"flip\") {\r\n        const x = direction.includes(\"u\") ? v : direction.includes(\"d\") ? -v : 0\r\n        const y = direction.includes(\"l\") ? -v : direction.includes(\"r\") ? v : 0\r\n        return [x && `rotateX(${x}deg)`, y && `rotateY(${y}deg)`]\r\n          .filter(Boolean)\r\n          .join(\" \")\r\n      }\r\n\r\n      const x = direction.includes(\"r\") ? -v : direction.includes(\"l\") ? v : 0\r\n      const y = direction.includes(\"d\") ? -v : direction.includes(\"u\") ? v : 0\r\n      return x || y ? `translate(${x}px, ${y}px)` : \"\"\r\n    }\r\n\r\n    const base =\r\n      {\r\n        fade: \"\",\r\n        zoomin: `scale(${0.6 + t * 0.4})`,\r\n        zoomout: `scale(${1.2 - t * 0.2})`,\r\n        flip: `perspective(400px) ${calc(\"flip\")}`,\r\n      }[animation] || \"\"\r\n\r\n    const offset = animation !== \"flip\" ? calc(\"offset\") : \"\"\r\n    const transform = [base, offset].filter(Boolean).join(\" \") || \"none\"\r\n\r\n    return [t, transform]\r\n  }\r\n\r\n  const applyStyles = (el, styles) => Object.assign(el.style, styles)\r\n\r\n  const isVisible = (el) => {\r\n    const rect = el.getBoundingClientRect()\r\n    return rect.top < window.innerHeight && rect.bottom > 0\r\n  }\r\n\r\n  const processElement = (element, instance) => {\r\n    let id = element.getAttribute(\"data-usal-id\")\r\n    if (!id) {\r\n      id = `usal-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`\r\n      element.setAttribute(\"data-usal-id\", id)\r\n    }\r\n\r\n    const classes = element.getAttribute(\"data-usal\") || \"\"\r\n    const config = parseClasses(classes, instance)\r\n\r\n    const data = {\r\n      element,\r\n      config,\r\n      configString: classes,\r\n      original: [\"opacity\", \"transform\", \"filter\"].reduce(\r\n        (acc, prop) => ({ ...acc, [prop]: element.style[prop] || \"\" }),\r\n        {},\r\n      ),\r\n      targets: null,\r\n      animated: false,\r\n      rafId: null,\r\n    }\r\n\r\n    if (config.count) {\r\n      const text = element.textContent\r\n      const parts = text.split(config.count)\r\n\r\n      if (parts.length === 2) {\r\n        let cleanValue = config.count.trim()\r\n        cleanValue = cleanValue.replace(/[^\\d\\s,.]/g, \"\")\r\n\r\n        let decimals = 0\r\n        let value = 0\r\n\r\n        const hasComma = cleanValue.includes(\",\")\r\n        const hasDot = cleanValue.includes(\".\")\r\n        const hasSpace = cleanValue.includes(\" \")\r\n        const separatorCount = [hasComma, hasDot, hasSpace].filter(\r\n          Boolean,\r\n        ).length\r\n\r\n        if (separatorCount >= 2) {\r\n          const lastComma = cleanValue.lastIndexOf(\",\")\r\n          const lastDot = cleanValue.lastIndexOf(\".\")\r\n\r\n          let decimalIndex = lastComma > lastDot ? lastComma : lastDot\r\n\r\n          const integerPart = cleanValue.substring(0, decimalIndex)\r\n          const decimalPart = cleanValue.substring(decimalIndex + 1)\r\n\r\n          const decimalDigits = decimalPart.replace(/\\D/g, \"\")\r\n          decimals = decimalDigits.length\r\n\r\n          const integerDigits = integerPart.replace(/\\D/g, \"\")\r\n          value = parseFloat(integerDigits + \".\" + decimalDigits)\r\n        } else if (separatorCount === 1 && (hasComma || hasDot)) {\r\n          const index = hasComma\r\n            ? cleanValue.lastIndexOf(\",\")\r\n            : cleanValue.lastIndexOf(\".\")\r\n          const afterSeparator = cleanValue.substring(index + 1)\r\n\r\n          if (afterSeparator.length <= 2 && /^\\d+$/.test(afterSeparator)) {\r\n            const beforeSeparator = cleanValue.substring(0, index)\r\n            decimals = afterSeparator.length\r\n            value = parseFloat(\r\n              beforeSeparator.replace(/\\D/g, \"\") + \".\" + afterSeparator,\r\n            )\r\n          } else {\r\n            value = parseFloat(cleanValue.replace(/\\D/g, \"\"))\r\n            decimals = 0\r\n          }\r\n        } else {\r\n          value = parseFloat(cleanValue.replace(/\\D/g, \"\"))\r\n          decimals = 0\r\n        }\r\n\r\n        data.countData = {\r\n          value,\r\n          decimals,\r\n          original: config.count,\r\n          before: parts[0],\r\n          after: parts[1],\r\n        }\r\n\r\n        element.textContent = \"\"\r\n        element.appendChild(document.createTextNode(parts[0]))\r\n        const span = document.createElement(\"span\")\r\n        span.textContent = \"0\"\r\n        element.appendChild(span)\r\n        element.appendChild(document.createTextNode(parts[1]))\r\n        data.countSpan = span\r\n      }\r\n    }\r\n\r\n    if (config.split) {\r\n      const targets = []\r\n\r\n      if (config.split === \"item\") {\r\n        Array.from(element.children).forEach((child) => {\r\n          child.style.opacity = \"0\"\r\n          if (config.text) {\r\n            child.style.opacity = \"1\"\r\n          }\r\n          targets.push(child)\r\n        })\r\n      } else {\r\n        const isWord = config.split === \"word\"\r\n\r\n        const tempDiv = document.createElement(\"div\")\r\n        tempDiv.innerHTML = element.innerHTML\r\n\r\n        const walker = document.createTreeWalker(tempDiv, NodeFilter.SHOW_TEXT)\r\n        const textNodes = []\r\n        while (walker.nextNode()) {\r\n          textNodes.push({\r\n            text: walker.currentNode.textContent,\r\n            parent: walker.currentNode.parentNode,\r\n          })\r\n        }\r\n\r\n        element.innerHTML = \"\"\r\n\r\n        textNodes.forEach(({ text }) => {\r\n          if (!text.trim()) {\r\n            element.appendChild(document.createTextNode(text))\r\n            return\r\n          }\r\n\r\n          const parts = isWord ? text.split(/(\\s+)/) : text.split(\"\")\r\n\r\n          parts.forEach((part) => {\r\n            if (!part) return\r\n\r\n            if (/\\s/.test(part)) {\r\n              element.appendChild(document.createTextNode(part))\r\n            } else {\r\n              const span = document.createElement(\"span\")\r\n              span.textContent = part\r\n              span.style.display = \"inline-block\"\r\n              span.style.opacity = \"0\"\r\n\r\n              if (config.text) {\r\n                span.style.opacity = \"1\"\r\n              }\r\n              element.appendChild(span)\r\n              targets.push(span)\r\n            }\r\n          })\r\n        })\r\n      }\r\n\r\n      data.targets = targets\r\n\r\n      if (config.splitAnimation) {\r\n        data.splitAnimationParsed = parseClasses(config.splitAnimation, instance)\r\n      }\r\n    }\r\n\r\n    if (!config.text && !data.countSpan && !data.targets) {\r\n      const [opacity, transform] = getTransform(\r\n        config.animation,\r\n        config.direction,\r\n        0,\r\n      )\r\n      applyStyles(element, {\r\n        opacity,\r\n        transform: transform !== \"none\" ? transform : \"\",\r\n        filter: config.blur ? \"blur(10px)\" : \"\",\r\n      })\r\n    }\r\n\r\n    instance.elements.set(id, data)\r\n    return data\r\n  }\r\n\r\n  const formatNumber = (value, original, decimals) => {\r\n    const hasComma = original.includes(\",\")\r\n    const hasDot = original.includes(\".\")\r\n    const hasSpace = original.includes(\" \")\r\n\r\n    let formatted =\r\n      decimals > 0 ? value.toFixed(decimals) : Math.floor(value).toString()\r\n\r\n    if (hasSpace || (hasComma && !hasDot) || (hasDot && !hasComma)) {\r\n      const parts = formatted.split(\".\")\r\n      const separator = hasSpace ? \" \" : hasComma ? \",\" : \".\"\r\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, separator)\r\n      formatted = parts.join(decimals > 0 ? (hasComma ? \",\" : \".\") : \"\")\r\n    }\r\n\r\n    return formatted\r\n  }\r\n\r\n  const animate = (data, instance) => {\r\n    if (data.animated && data.config.once) return\r\n    if (instance.animating.has(data.element)) return\r\n    if (instance.animating.size >= instance.config.maxConcurrent) return\r\n\r\n    instance.animating.add(data.element)\r\n\r\n    const { config, element, targets, countSpan, countData } = data\r\n    const start = performance.now() + config.delay\r\n    const easing = easings[config.easing]\r\n\r\n    let splitAnim = config\r\n    if (targets && config.splitAnimation) {\r\n      splitAnim = parseClasses(config.splitAnimation, instance)\r\n    }\r\n\r\n    if (config.text) {\r\n      const textTargets = targets || [element]\r\n      const startTime = performance.now()\r\n\r\n      const tick = () => {\r\n        const elapsed = performance.now() - startTime\r\n        const cycleProgress = (elapsed % config.duration) / config.duration\r\n\r\n        textTargets.forEach((target, i) => {\r\n          if (config.text === \"shimmer\") {\r\n            const phase = cycleProgress * Math.PI * 2 + i * 0.5\r\n            const intensity = Math.sin(phase) * 0.5 + 0.5\r\n            applyStyles(target, {\r\n              opacity: 0.5 + intensity * 0.5,\r\n              filter: `brightness(${1 + intensity * 0.3})`,\r\n            })\r\n          } else {\r\n            const wavePosition = cycleProgress * 1.6 - 0.3\r\n\r\n            const letterPosition = i / textTargets.length\r\n            const distance = Math.abs(wavePosition - letterPosition)\r\n\r\n            let intensity = distance < 0.3 ? 1 - distance / 0.3 : 0\r\n\r\n            const weight = Math.round(100 + intensity * 800)\r\n            applyStyles(target, {\r\n              fontWeight: weight.toString(),\r\n              opacity: \"1\",\r\n            })\r\n          }\r\n        })\r\n        data.rafId = requestAnimationFrame(tick)\r\n      }\r\n\r\n      tick()\r\n      data.animated = true\r\n      return\r\n    }\r\n\r\n    const tick = () => {\r\n      const now = performance.now()\r\n      const elapsed = Math.max(0, now - start)\r\n      const progress = Math.min(elapsed / config.duration, 1)\r\n      const easedProgress = easing(progress)\r\n\r\n      if (countSpan && countData) {\r\n        const value = countData.value * easedProgress\r\n        countSpan.textContent =\r\n          progress >= 1\r\n            ? countData.original\r\n            : formatNumber(value, countData.original, countData.decimals)\r\n      }\r\n\r\n      if (targets) {\r\n        let allComplete = true\r\n\r\n        targets.forEach((target, index) => {\r\n          const targetDelay = index * config.splitDelay\r\n          const targetElapsed = elapsed - targetDelay\r\n\r\n          if (targetElapsed < 0) {\r\n            allComplete = false\r\n            return\r\n          }\r\n\r\n          const targetProgress = Math.min(targetElapsed / config.duration, 1)\r\n          const targetEased = easing(targetProgress)\r\n\r\n          const [opacity, transform] = getTransform(\r\n            splitAnim.animation || config.animation,\r\n            splitAnim.direction || config.direction,\r\n            targetEased,\r\n          )\r\n\r\n          applyStyles(target, {\r\n            opacity,\r\n            transform: transform !== \"none\" ? transform : \"\",\r\n            filter:\r\n              config.blur && targetEased < 1\r\n                ? `blur(${(1 - targetEased) * 10}px)`\r\n                : \"\",\r\n          })\r\n\r\n          if (targetProgress < 1) {\r\n            allComplete = false\r\n          }\r\n        })\r\n\r\n        if (!allComplete) {\r\n          data.rafId = requestAnimationFrame(tick)\r\n        } else {\r\n          instance.animating.delete(element)\r\n          data.animated = true\r\n          element.setAttribute(\"data-usal-animated\", \"1\")\r\n        }\r\n      } else {\r\n        const [opacity, transform] = getTransform(\r\n          config.animation,\r\n          config.direction,\r\n          easedProgress,\r\n        )\r\n\r\n        applyStyles(element, {\r\n          opacity,\r\n          transform: transform !== \"none\" ? transform : \"\",\r\n          filter:\r\n            config.blur && easedProgress < 1\r\n              ? `blur(${(1 - easedProgress) * 10}px)`\r\n              : \"\",\r\n        })\r\n\r\n        if (progress < 1) {\r\n          data.rafId = requestAnimationFrame(tick)\r\n        } else {\r\n          instance.animating.delete(element)\r\n          data.animated = true\r\n          element.setAttribute(\"data-usal-animated\", \"1\")\r\n        }\r\n      }\r\n    }\r\n\r\n    data.rafId = requestAnimationFrame(tick)\r\n  }\r\n\r\n  const reset = (data, instance) => {\r\n    if (data.rafId) {\r\n      cancelAnimationFrame(data.rafId)\r\n      data.rafId = null\r\n    }\r\n\r\n    const { element, original, targets, config, countSpan } = data\r\n\r\n    if (!config.text && !countSpan && !targets) {\r\n      const [opacity, transform] = getTransform(\r\n        config.animation,\r\n        config.direction,\r\n        0,\r\n      )\r\n      applyStyles(element, {\r\n        opacity: \"0\",\r\n        transform: transform !== \"none\" ? transform : \"\",\r\n        filter: config.blur ? \"blur(10px)\" : \"\",\r\n      })\r\n    } else {\r\n      applyStyles(element, original)\r\n    }\r\n\r\n    if (countSpan) countSpan.textContent = \"0\"\r\n\r\n    if (targets) {\r\n      const [, transform] = getTransform(config.animation, config.direction, 0)\r\n      targets.forEach((target) =>\r\n        applyStyles(target, {\r\n          opacity: \"0\",\r\n          transform: transform !== \"none\" ? transform : \"\",\r\n          filter: config.blur ? \"blur(10px)\" : \"\",\r\n        }),\r\n      )\r\n    }\r\n\r\n    data.animated = false\r\n    element.removeAttribute(\"data-usal-animated\")\r\n    instance.animating.delete(element)\r\n  }\r\n\r\n  const processDOMChanges = (instance) => {\r\n    const current = new Set()\r\n\r\n    document.querySelectorAll(\"[data-usal]\").forEach((el) => {\r\n      const id = el.getAttribute(\"data-usal-id\")\r\n      const newClasses = el.getAttribute(\"data-usal\")\r\n\r\n      if (id && instance.elements.has(id)) {\r\n        current.add(id)\r\n        const data = instance.elements.get(id)\r\n\r\n        if (newClasses !== data.configString) {\r\n          reset(data, instance)\r\n          instance.elements.delete(id)\r\n          const newData = processElement(el, instance)\r\n\r\n          if (instance.observer) {\r\n            instance.observer.observe(el)\r\n          }\r\n          if (isVisible(el)) animate(newData, instance)\r\n        }\r\n      } else {\r\n        const data = processElement(el, instance)\r\n        const newId = data.element.getAttribute(\"data-usal-id\")\r\n        current.add(newId)\r\n\r\n        if (instance.observer) {\r\n          instance.observer.observe(el)\r\n        }\r\n\r\n        if (isVisible(el)) animate(data, instance)\r\n      }\r\n    })\r\n\r\n    instance.elements.forEach((data, id) => {\r\n      if (!current.has(id)) {\r\n        if (data.rafId) cancelAnimationFrame(data.rafId)\r\n\r\n        if (instance.observer) {\r\n          instance.observer.unobserve(data.element)\r\n        }\r\n        instance.elements.delete(id)\r\n      }\r\n    })\r\n  }\r\n\r\n  const setupObservers = (instance) => {\r\n    if (instance.observer) instance.observer.disconnect()\r\n\r\n    const thresholds = new Set([0])\r\n    instance.elements.forEach((data) => {\r\n      const threshold =\r\n        (data.config.threshold || instance.config.defaultThreshold) / 100\r\n      thresholds.add(threshold)\r\n    })\r\n\r\n    instance.observer = new IntersectionObserver(\r\n      (entries) => {\r\n        entries.forEach((entry) => {\r\n          const data = instance.elements.get(\r\n            entry.target.getAttribute(\"data-usal-id\"),\r\n          )\r\n          if (!data) return\r\n\r\n          const elementThreshold =\r\n            (data.config.threshold || instance.config.defaultThreshold) / 100\r\n\r\n          if (entry.intersectionRatio >= elementThreshold && !data.animated) {\r\n            animate(data, instance)\r\n          } else if (\r\n            entry.intersectionRatio === 0 &&\r\n            data.animated &&\r\n            !data.config.once\r\n          ) {\r\n            reset(data, instance)\r\n          }\r\n        })\r\n      },\r\n      {\r\n        threshold: Array.from(thresholds).sort((a, b) => a - b),\r\n      },\r\n    )\r\n\r\n    instance.elements.forEach((data) => instance.observer.observe(data.element))\r\n\r\n    if (instance.mutationObserver) instance.mutationObserver.disconnect()\r\n    instance.mutationObserver = new MutationObserver(() =>\r\n      requestAnimationFrame(() => processDOMChanges(instance)),\r\n    )\r\n\r\n    instance.mutationObserver.observe(document.body, {\r\n      childList: true,\r\n      subtree: true,\r\n      attributes: true,\r\n      attributeFilter: [\"data-usal\"],\r\n    })\r\n  }\r\n\r\n  const createInstance = (config = {}) => {\r\n    const instance = {\r\n      observer: null,\r\n      mutationObserver: null,\r\n      elements: new Map(),\r\n      animating: new Set(),\r\n      config: {\r\n        maxConcurrent: 100,\r\n        defaultDuration: 1000,\r\n        defaultDelay: 0,\r\n        defaultThreshold: 30,\r\n        defaultSplitDelay: 30,\r\n        ...config,\r\n      },\r\n    }\r\n\r\n    return {\r\n      init(newConfig = {}) {\r\n        Object.assign(instance.config, newConfig)\r\n        processDOMChanges(instance)\r\n        setupObservers(instance)\r\n      },\r\n\r\n      destroy() {\r\n        ;[instance.observer, instance.mutationObserver].forEach((o) =>\r\n          o?.disconnect(),\r\n        )\r\n        instance.elements.forEach((data) => {\r\n          if (data.rafId) cancelAnimationFrame(data.rafId)\r\n          applyStyles(data.element, data.original)\r\n        })\r\n        instance.elements.clear()\r\n        instance.animating.clear()\r\n      },\r\n\r\n      refresh() {\r\n        processDOMChanges(instance)\r\n      },\r\n\r\n      createInstance: () => createInstance(config),\r\n    }\r\n  }\r\n\r\n  const globalInstance = createInstance()\r\n\r\n  return {\r\n    ...globalInstance,\r\n    createInstance,\r\n  }\r\n})()\r\n\r\nif (typeof window !== \"undefined\") {\r\n  if (document.readyState === \"loading\") {\r\n    document.addEventListener(\"DOMContentLoaded\", () => USAL.init())\r\n  } else {\r\n    USAL.init()\r\n  }\r\n  window.USAL = USAL\r\n}\r\n\r\nexport default USAL\r\n"],
  "mappings": "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",
  "names": ["x", "y", "tick"]
}
